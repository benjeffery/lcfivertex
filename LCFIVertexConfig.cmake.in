###############################################
# cmake configuration file for @PROJECT_NAME@
# @author Jan Engels, DESY
###############################################

SET( @PROJECT_NAME@_FOUND FALSE )
MARK_AS_ADVANCED( @PROJECT_NAME@_FOUND )

# do not store find results in cache
SET( @PROJECT_NAME@_INCLUDE_DIR @PROJECT_NAME@_INCLUDE_DIR-NOTFOUND )

FIND_PATH( @PROJECT_NAME@_INCLUDE_DIR
	NAMES ZVTOPZVKINProcessor.h
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES include
	NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_INCLUDE_DIR )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
					" -- failed to find @PROJECT_NAME@ include directory!!" )
ELSE()
    MARK_AS_ADVANCED( @PROJECT_NAME@_INCLUDE_DIR )
ENDIF()

# vertex_lcfi includes
SET( @PROJECT_NAME@_VTX_INCLUDE_DIR @PROJECT_NAME@_VTX_INCLUDE_DIR-NOTFOUND )
FIND_PATH( @PROJECT_NAME@_VTX_INCLUDE_DIR
	NAMES inc/vertex.h
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES vertex_lcfi
	NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_VTX_INCLUDE_DIR )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
					" -- failed to find @PROJECT_NAME@ include directory!!" )
ELSE()
    MARK_AS_ADVANCED( @PROJECT_NAME@_VTX_INCLUDE_DIR )
ENDIF()

# nnet includes
SET( @PROJECT_NAME@_NNET_INCLUDE_DIR @PROJECT_NAME@_NNET_INCLUDE_DIR-NOTFOUND )
FIND_PATH( @PROJECT_NAME@_NNET_INCLUDE_DIR
	NAMES BackPropagationAlgorithm.h
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES vertex_lcfi/nnet/inc
	NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_NNET_INCLUDE_DIR )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
					" -- failed to find @PROJECT_NAME@ include directory!!" )
ELSE()
    MARK_AS_ADVANCED( @PROJECT_NAME@_NNET_INCLUDE_DIR )
ENDIF()

# boost includes
SET( @PROJECT_NAME@_BOOST_INCLUDE_DIR @PROJECT_NAME@_BOOST_INCLUDE_DIR-NOTFOUND )
FIND_PATH( @PROJECT_NAME@_BOOST_INCLUDE_DIR
	NAMES boost/numeric/ublas/vector.hpp
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES boost
	NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_BOOST_INCLUDE_DIR )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
					" -- failed to find BOOST include directory!!" )
ELSE()
    MARK_AS_ADVANCED( @PROJECT_NAME@_BOOST_INCLUDE_DIR )
ENDIF()



# do not store find results in cache
SET( @PROJECT_NAME@_LIB @PROJECT_NAME@_LIB-NOTFOUND )

FIND_LIBRARY( @PROJECT_NAME@_LIB
	NAMES @PROJECT_NAME@
	PATHS @CMAKE_INSTALL_PREFIX@
	PATH_SUFFIXES lib
	NO_DEFAULT_PATH
)
IF( NOT @PROJECT_NAME@_LIB )
    MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
					" -- failed to find @PROJECT_NAME@ library!!" )
ELSE()
    MARK_AS_ADVANCED( @PROJECT_NAME@_LIB )
ENDIF()


# set variables and display results
IF( @PROJECT_NAME@_INCLUDE_DIR AND
        @PROJECT_NAME@_VTX_INCLUDE_DIR AND
        @PROJECT_NAME@_NNET_INCLUDE_DIR AND
        @PROJECT_NAME@_BOOST_INCLUDE_DIR AND
        @PROJECT_NAME@_LIB )
    SET( @PROJECT_NAME@_FOUND TRUE )
    # include directories
	SET( @PROJECT_NAME@_INCLUDE_DIRS
        ${@PROJECT_NAME@_INCLUDE_DIR}
        ${@PROJECT_NAME@_VTX_INCLUDE_DIR}
        ${@PROJECT_NAME@_NNET_INCLUDE_DIR}
        ${@PROJECT_NAME@_BOOST_INCLUDE_DIR} )
    # library
	SET( @PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIB} )
	MARK_AS_ADVANCED( @PROJECT_NAME@_INCLUDE_DIRS @PROJECT_NAME@_LIBRARIES )
	MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME} -- works" )
ELSE()
	IF( @PROJECT_NAME@_FIND_REQUIRED )
		MESSAGE( FATAL_ERROR "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME} -- failed!!" )
    ELSE()
        MESSAGE( STATUS "Check for @PROJECT_NAME@: ${@PROJECT_NAME@_HOME}"
						" -- failed!! will skip this package..." )
    ENDIF()
ENDIF()
